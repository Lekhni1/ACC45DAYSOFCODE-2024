#include <iostream>
#include <vector>
#include <unordered_map>
using namespace std;

int main() {
    int T;
    cin >> T;  // Read the number of test cases

    while (T--) {
        int N;
        cin >> N;  // Read the number of people
        vector<int> P(N);
        
        for (int i = 0; i < N; i++) {
            cin >> P[i];  // Read each person's preferred group size
        }

        unordered_map<int, int> countMap;  // Map to count preferences
        for (int i = 0; i < N; i++) {
            countMap[P[i]]++;  // Count the number of people preferring each size
        }

        bool possible = true;
        // Check each group size
        for (auto& entry : countMap) {
            int groupSize = entry.first;
            int count = entry.second;
            if (count % groupSize != 0) {  // If count is not divisible by group size
                possible = false;
                break;
            }
        }

        cout << (possible ? "YES" : "NO") << endl;  // Output result for the test case
    }

    return 0;
}
