#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int main() {
    int T;
    cin >> T;  // Number of test cases
    
    while (T--) {
        int n;
        cin >> n;  // Number of movies
        
        vector<int> L(n), R(n);
        
        // Read lengths
        for (int i = 0; i < n; i++) {
            cin >> L[i];
        }
        
        // Read ratings
        for (int i = 0; i < n; i++) {
            cin >> R[i];
        }
        
        int best_index = -1;
        long long max_value = -1;
        int max_rating = -1;

        for (int i = 0; i < n; i++) {
            long long product = static_cast<long long>(L[i]) * R[i];

            if (product > max_value || 
                (product == max_value && R[i] > max_rating) || 
                (product == max_value && R[i] == max_rating && best_index == -1)) {
                best_index = i;
                max_value = product;
                max_rating = R[i];
            }
        }

        cout << best_index + 1 << endl;  // Output 1-based index
    }
    
    return 0;
}
